on: [push]

name: CI

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        platform: [ ubuntu-latest, windows-latest, macos-latest ]

    runs-on: ${{ matrix.platform }}
    name: Rust project
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - uses: Swatinem/rust-cache@v1
      
      - name: Install system deps
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get install g++ pkg-config libx11-dev libxi-dev libxcb-randr0-dev libxcb-xtest0-dev libxcb-xinerama0-dev libxcb-shape0-dev libxcb-xkb-dev libxtst-dev libasound2-dev libssl-dev cmake libfreetype6-dev libexpat1-dev libxcb-composite0-dev

      - name: Build linux
        if: matrix.platform == 'ubuntu-latest'
        run: | 
          cd src/worker/rust-backend
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
          cargo +nightly build --release -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort --target x86_64-unknown-linux-gnu

      - name: Build windows
        if: matrix.platform == 'windows-latest'
        run: | 
          cd src/worker/rust-backend
          rustup component add rust-src --toolchain nightly-x86_64-pc-windows-msvc
          cargo +nightly build --release -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort --target x86_64-pc-windows-gnu

      - name: Build macos
        if: matrix.platform == 'macos-latest'
        run: | 
          cd src/worker/rust-backend
          rustup component add rust-src --toolchain nightly-x86_64-apple-darwin
          cargo +nightly build --release -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort --target x86_64-apple-darwin
